syntax = "proto3";
package quorum.pb;

message Object {
  string id = 1;
  string type = 2;
  string content = 6;
  string name = 8;
}

enum TrxType {
  POST = 0;               // post to group
  SCHEMA = 2;             // group schema
  PRODUCER = 3;           // update group producer
  ANNOUNCE = 4;           // self announce, producer or user)
  REQ_BLOCK_FORWARD = 5;  // request next block
  REQ_BLOCK_BACKWARD = 6; // request previous block
  REQ_BLOCK_RESP = 7;     // response request next block
  BLOCK_SYNCED = 8;       // block for producer to sync (old block)
  BLOCK_PRODUCED = 9;     // block for producer to merge (newly produced block)
  USER = 10;              // update group user
  ASK_PEERID = 11;        // ask owner/producer peerid
  ASK_PEERID_RESP = 12;   // response ask peerid
  CHAIN_CONFIG = 13;      // predefined chain configuration
  APP_CONFIG = 14;        // group app customized configuration
}

enum TrxStroageType {
  CHAIN = 0;
  CACHE = 1;
}

message Trx {
  string TrxId = 1;
  TrxType Type = 2;
  string GroupId = 3;
  bytes Data = 4;
  int64 TimeStamp = 5;
  string Version = 6;
  int64 Expired = 7;
  int64 ResendCount = 8;
  int64 Nonce = 9;
  string SenderPubkey = 10;
  bytes SenderSign = 11;
  TrxStroageType StorageType = 12;
  bool SudoTrx = 13;
}

message Witnesses {
  string groupId = 1;
  int64 epoch = 2;
  bytes TrxHash = 3;
  string WitnessPubkey = 4;
  bytes Signature = 5;
}

message Block {
  string GroupId = 1;
  int64 Epoch = 2;
  bytes PrevEpochHash = 3;
  repeated Trx Trxs = 4;
  bytes EpochHash = 5;
  repeated Witnesses Witesses = 6;
  int64 TimeStamp = 7;
  bytes BlockHash = 8;
  string BookkeepingPubkey = 9;
  bytes BookkeepingSignature = 10;
  bool SudoBlock = 11;
}

enum AnnounceType {
  AS_USER = 0;
  AS_PRODUCER = 1;
  AS_USER_ENCRYPT = 2;
}

enum ApproveType {
  ANNOUNCED = 0;
  APPROVED = 1;
  REJECTED = 2;
}

enum ActionType {
  ADD = 0;
  REMOVE = 1;
}

message AnnounceItem {
  string GroupId = 1;
  string SignPubkey = 2;
  string EncryptPubkey = 3;
  string AnnouncerSignature = 4;
  AnnounceType Type = 5;
  string OwnerPubkey = 6;
  string OwnerSignature = 7;
  ApproveType Result = 8;
  int64 TimeStamp = 9;
  ActionType Action = 10;
  string Memo = 11;
}
